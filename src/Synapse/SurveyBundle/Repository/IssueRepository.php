<?php
namespace Synapse\SurveyBundle\Repository;

use Synapse\CoreBundle\Exception\SynapseDatabaseException;
use Synapse\CoreBundle\Repository\SynapseRepository;

/**
 * IssueRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class IssueRepository extends SynapseRepository
{

    const REPOSITORY_KEY = 'SynapseSurveyBundle:Issue';

    /**
     * Get Issues by Survey Id
     *
     * @param int $surveyId
     * @return array
     * @throws SynapseDatabaseException
     */
    public function getIssuesList($surveyId = null)
    {
        $parameters = [
            'surveyId' => $surveyId
        ];

        $surveyIdCondition = '';
        if (is_numeric($surveyId)) {
            $surveyIdCondition = " i.survey_id = :surveyId AND ";
        }

        $sql = "SELECT 
                    i.id,
                    il.name AS issue_name,
                    i.icon AS issue_icon
                FROM
                    issue i
                        LEFT JOIN
                    issue_lang il ON i.id = il.issue_id
                        AND il.deleted_at IS NULL
                WHERE
                    $surveyIdCondition
                    i.deleted_at IS NULL";

        try {
            $em = $this->getEntityManager();
            $stmt = $em->getConnection()->executeQuery($sql, $parameters);
        } catch (\Exception $e) {
            throw new SynapseDatabaseException($e->getMessage() . ": " . $e->getTraceAsString());
        }

        $result = $stmt->fetchAll();
        return $result;
    }

}