<?php
namespace Synapse\CalendarBundle\Repository;

use Synapse\CoreBundle\Entity\BaseEntity;
use Synapse\CoreBundle\Entity\OrgPersonFaculty;
use Synapse\CoreBundle\Repository\SynapseRepository;
use Synapse\CalendarBundle\Entity\OrgCorporateGoogleAccess;

class OrgCorporateGoogleAccessRepository extends SynapseRepository
{
    const REPOSITORY_KEY = 'SynapseCalendarBundle:OrgCorporateGoogleAccess';

    /**
     * @param integer $id
     * @param \Exception $exception
     * @param string $lockMode
     * @param string $lockVersion
     * @return BaseEntity
     * @throws \Exception
     */
    public function find($id, $exception = null, $lockMode = null, $lockVersion = null)
    {
        $object = parent::find($id, $lockMode, $lockVersion); // TODO: Change the autogenerated stub
        return $this->doesObjectExist($object, $exception);
    }

    /**
     * @param array $criteria
     * @param array|null $orderBy
     * @param null $limit
     * @param null $offset
     * @param \Exception $exception
     * @return array
     * @throws \Exception
     */
    public function findBy(array $criteria, array $orderBy = null, $limit = null, $offset = null, $exception = null)
    {
        $array = parent::findBy($criteria, $orderBy, $limit, $offset); // TODO: Change the autogenerated stub
        return $this->doObjectsExist($array, $exception);
    }

    /**
     * @param array $criteria
     * @param \Exception $exception
     * @param array|null $orderBy
     * @return BaseEntity | OrgPersonFaculty
     * @throws \Exception
     */
    public function findOneBy(array $criteria, $exception = null, array $orderBy = null)
    {
        $object = parent::findOneBy($criteria, $orderBy); // TODO: Change the autogenerated stub
        return $this->doesObjectExist($object, $exception);
    }

    /**
     * @param OrgCorporateGoogleAccess $orgCorporateGoogleAccess
     * @return OrgCorporateGoogleAccess
     */
    public function create(OrgCorporateGoogleAccess $orgCorporateGoogleAccess)
    {
        $em = $this->getEntityManager();
        $em->persist($orgCorporateGoogleAccess);
        return $orgCorporateGoogleAccess;
    }
}