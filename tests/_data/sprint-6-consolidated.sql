/*
-- Logins_count View
*/
create view Logins_count AS
                Select person_id, count(id) as cnt
    from access_log
    where event = 'Login'
    group by person_id;

/*
-- ebi_search table insert
*/

INSERT INTO `ebi_search` (`created_by`,`created_at`,`modified_by`,`modified_at`,`deleted_by`,`deleted_at`,`query_key`,`search_type`,`is_enabled`,`query`) VALUES (NULL,NULL,NULL,NULL,NULL,NULL,'My_Team_Interactions_count_Groupby_Teams','E',1,'select tm.teams_id, t.team_name, count(al.id) as numbers, \'interaction\' as activity\nfrom Teams t, team_members tm, activity_log al\nwhere tm.teams_id = t.id \nand tm.organization_id = t.organization_id\nand al.organization_id = tm.organization_id\nand al.person_id_faculty = tm.person_id\nand al.activity_type in (\'R\',\'C\',\'N\',\'A\')\nand al.activity_date between \'$$fromDate$$\' and \'$$toDate$$\'\nand tm.teams_id in (SELECT teams_id FROM team_members where is_team_leader = 1 and person_id = \'$$loggedUserId$$\')\nand tm.organization_id = \'$$organizationId$$\' and t.deleted_at IS NULL and tm.deleted_at IS NULL and al.deleted_at IS NULL\ngroup by t.team_name\n');
INSERT INTO `ebi_search` (`created_by`,`created_at`,`modified_by`,`modified_at`,`deleted_by`,`deleted_at`,`query_key`,`search_type`,`is_enabled`,`query`) VALUES (NULL,NULL,NULL,NULL,NULL,NULL,'My_Team_Open_Referrals_count_Groupby_Teams','E',1,'select tm.teams_id, t.team_name, count(al.id) as numbers, \'openreferrals\' as activity from Teams t, team_members tm, activity_log al, referrals r where tm.teams_id = t.id and tm.organization_id = t.organization_id and al.organization_id = tm.organization_id and al.person_id_faculty = tm.person_id and al.activity_type = \'R\' and r.id = al.referrals_id and r.status = \'O\' and al.activity_date between \'$$fromDate$$\' and \'$$toDate$$\' and tm.teams_id in (SELECT teams_id FROM team_members where is_team_leader = 1 and person_id = \'$$loggedUserId$$\') and tm.organization_id = \'$$organizationId$$\' and t.deleted_at IS NULL and tm.deleted_at IS NULL and al.deleted_at IS NULL group by t.team_name');
INSERT INTO `ebi_search` (`created_by`,`created_at`,`modified_by`,`modified_at`,`deleted_by`,`deleted_at`,`query_key`,`search_type`,`is_enabled`,`query`) VALUES (NULL,NULL,NULL,NULL,NULL,NULL,'My_Team_Logins_Count_Groupby_Teams','E',1,'select tm.teams_id, t.team_name, count(al.id) as numbers, \'logins\' as activity from Teams t, team_members tm, activity_log al where tm.teams_id = t.id and tm.organization_id = t.organization_id and al.organization_id = tm.organization_id and al.person_id_faculty = tm.person_id and al.activity_type = \'L\' and al.activity_date between \'$$fromDate$$\' and \'$$toDate$$\' and tm.teams_id in (SELECT teams_id FROM team_members where is_team_leader = 1 and person_id = \'$$loggedUserId$$\') and tm.organization_id = \'$$organizationId$$\' and t.deleted_at IS NULL and tm.deleted_at IS NULL and al.deleted_at IS NULL group by t.team_name');
INSERT INTO `ebi_search` (`created_by`,`created_at`,`modified_by`,`modified_at`,`deleted_by`,`deleted_at`,`query_key`,`search_type`,`is_enabled`,`query`) VALUES (NULL,NULL,NULL,NULL,NULL,NULL,'My_Team_List_with_OpenReferrals_and_otherActivities','E',1,'(select \'openreferrals\' as activity,al.activity_date as activity_date,al.person_id_faculty as team_member_id,pa.firstname as team_member_firstname,pa.lastname as team_member_lastname, ci.primary_email,al.person_id_student as student_id, p.firstname as student_firstname,p.lastname as student_lastname,\'O\' as activity_type, al.referrals_id, al.appointments_id, al.note_id, al.contacts_id, \'\' as reason_id, al.reason as reason_text,r.status from activity_log al left join referrals r on r.id = al.referrals_id left join person pa on pa.id = al.person_id_faculty left join person_contact_info pci on pci.person_id = al.person_id_faculty left join contact_info ci on ci.id = pci.contact_id left join person p on p.id = al.person_id_student where al.activity_type in (\'R\') and al.activity_date between \'$$fromDate$$\' and \'$$toDate$$\' and al.person_id_faculty in ($$teamMemberId$$) and al.deleted_at IS NULL and al.organization_id = \'$$organizationId$$\') union (select \'interactions\' as activity,al.activity_date as activity_date,al.person_id_faculty as team_member_id, pa.firstname as team_member_firstname,pa.lastname as team_member_lastname, ci.primary_email,al.person_id_student as student_id, p.firstname as student_firstname,p.lastname as student_lastname, al.activity_type as activity_type, al.referrals_id, al.appointments_id, al.note_id, al.contacts_id, \'\' as reason_id, al.reason as reason_text,\'\' as status from activity_log al left join person pa on pa.id = al.person_id_faculty left join person_contact_info pci on pci.person_id = al.person_id_faculty left join contact_info ci on ci.id = pci.contact_id left join person p on p.id = al.person_id_student where al.activity_type in (\'A\',\'C\',\'N\',\'L\') and al.activity_date between \'$$fromDate$$\' and \'$$toDate$$\' and al.person_id_faculty in ($$teamMemberId$$) and al.deleted_at IS NULL and al.organization_id = \'$$organizationId$$\') order by activity_date');
INSERT INTO `ebi_search` (`created_by`,`created_at`,`modified_by`,`modified_at`,`deleted_by`,`deleted_at`,`query_key`,`search_type`,`is_enabled`,`query`) VALUES (NULL,NULL,NULL,NULL,NULL,NULL,'My_Team_List_without_Referrals','E',1,'select \'interactions\' as activity,al.activity_date as activity_date,al.person_id_faculty as team_member_id,pa.firstname as team_member_firstname,pa.lastname as team_member_lastname, ci.primary_email,al.person_id_student as student_id, p.firstname as student_firstname,p.lastname as student_lastname,al.activity_type as activity_type, al.referrals_id, al.appointments_id, al.note_id, al.contacts_id, \'\' as reason_id, al.reason as reason_text,r.status from activity_log al left join referrals r on r.id = al.referrals_id left join person pa on pa.id = al.person_id_faculty left join person_contact_info pci on pci.person_id = al.person_id_faculty left join contact_info ci on ci.id = pci.contact_id left join person p on p.id = al.person_id_student where al.activity_type in (\'A\',\'C\',\'N\',\'R\') and al.activity_date between \'$$fromDate$$\' and \'$$toDate$$\' and al.person_id_faculty in ($$teamMemberId$$) and al.deleted_at IS NULL and al.organization_id = \'$$organizationId$$\' order by activity_date');
INSERT INTO `ebi_search` (`created_by`,`created_at`,`modified_by`,`modified_at`,`deleted_by`,`deleted_at`,`query_key`,`search_type`,`is_enabled`,`query`) VALUES (NULL,NULL,NULL,NULL,NULL,NULL,'My_Team_List_with_only_Logins','E',1,'select \'logins\' as activity,al.activity_date as activity_date,al.person_id_faculty as team_member_id,pa.firstname as team_member_firstname,pa.lastname as team_member_lastname, ci.primary_email, \'\' as student_id, \'\' as student_firstname,\'\' as student_lastname,al.activity_type as activity_type, al.referrals_id, al.appointments_id, al.note_id, al.contacts_id, \'\' as activity_id, \'\' as reason_id, \'-\' as reason_text,\'\' as status from activity_log al left join person pa on pa.id = al.person_id_faculty left join person_contact_info pci on pci.person_id = al.person_id_faculty left join contact_info ci on ci.id = pci.contact_id where al.activity_type in (\'L\') and al.activity_date between \'$$fromDate$$\' and \'$$toDate$$\' and al.person_id_faculty in ($$teamMemberId$$) and al.deleted_at IS NULL and al.organization_id = \'$$organizationId$$\' order by activity_date');
INSERT INTO `ebi_search` (`created_by`,`created_at`,`modified_by`,`modified_at`,`deleted_by`,`deleted_at`,`query_key`,`search_type`,`is_enabled`,`query`) VALUES (NULL,NULL,NULL,NULL,NULL,NULL,'My_Team_List_with_only_OpenReferrals','E',1,'select \'openreferrals\' as activity,al.activity_date as activity_date,al.person_id_faculty as team_member_id,pa.firstname as team_member_firstname,pa.lastname as team_member_lastname, ci.primary_email,al.person_id_student as student_id, p.firstname as student_firstname,p.lastname as student_lastname,\'O\' as activity_type, al.referrals_id, al.appointments_id, al.note_id, al.contacts_id, \'\' as reason_id, al.reason as reason_text,r.status from activity_log al left join referrals r on r.id = al.referrals_id left join person pa on pa.id = al.person_id_faculty left join person_contact_info pci on pci.person_id = al.person_id_faculty left join contact_info ci on ci.id = pci.contact_id left join person p on p.id = al.person_id_student where al.activity_type in (\'R\') and r.status = \'O\' and al.activity_date between \'$$fromDate$$\' and \'$$toDate$$\' and al.person_id_faculty in ($$teamMemberId$$) and al.deleted_at IS NULL and al.organization_id = \'$$organizationId$$\' order by activity_date');
INSERT INTO `ebi_search` (`created_by`,`created_at`,`modified_by`,`modified_at`,`deleted_by`,`deleted_at`,`query_key`,`search_type`,`is_enabled`,`query`) VALUES (NULL,NULL,NULL,NULL,NULL,NULL,'My_High_priority_students_Count','E',1,'select count(per.id) as highCount from person per where per.id in (select distinct person_id from org_group_students ogs where ogs.org_group_id in (select org_group_id from org_group_faculty where person_id = $$personId$$ and deleted_at is  null and org_permissionset_id in (select id from org_permissionset where accesslevel_ind_agg = 1 and deleted_at is null)) and ogs.deleted_at is null) and per.last_contact_date < per.risk_update_date and per.risk_level in (1,2) and per.deleted_at is null');
INSERT INTO `ebi_search` (`created_by`,`created_at`,`modified_by`,`modified_at`,`deleted_by`,`deleted_at`,`query_key`,`search_type`,`is_enabled`,`query`) VALUES (NULL,NULL,NULL,NULL,NULL,NULL,'My_Total_Students_Count_Groupby_Risk','E',1,'select p.risk_level, count(p.id) as totalStudentsHighPriority, rml.risk_text, rml.image_name from person p, risk_model_levels rml where p.id in (select distinct person_id from org_group_students ogs where ogs.org_group_id in (select org_group_id from org_group_faculty where person_id = $$personId$$ and deleted_at is  null and org_permissionset_id in (select id from org_permissionset where accesslevel_ind_agg = 1 and deleted_at is null)) and ogs.deleted_at is null) and rml.risk_level = p.risk_level and rml.risk_model_id = p.risk_model_id and p.deleted_at is null group by p.risk_level');
INSERT INTO `ebi_search` (`created_by`,`created_at`,`modified_by`,`modified_at`,`deleted_by`,`deleted_at`,`query_key`,`search_type`,`is_enabled`,`query`) VALUES (NULL,NULL,NULL,NULL,NULL,NULL,'My_High_priority_students_List','E',1,'select p.id,p.firstname, p.lastname, p.risk_level, p.risk_model_id, p.intent_to_leave, rml.image_name, rml.risk_text, lc.cnt as login_cnt, p.cohert, p.last_activity from person p join risk_model_levels rml on (p.risk_model_id = rml.risk_model_id and p.risk_level = rml.risk_level) left outer join Logins_count lc on (lc.person_id = p.id) where p.id in (select distinct person_id from org_group_students ogs where ogs.org_group_id in (select org_group_id from org_group_faculty where person_id = $$personId$$ and deleted_at is  null and org_permissionset_id in (select id from org_permissionset where accesslevel_ind_agg = 1 and deleted_at is null)) and ogs.deleted_at is null) and p.last_contact_date < p.risk_update_date and p.risk_level in (1,2) and p.deleted_at is null');
INSERT INTO `ebi_search` (`created_by`,`created_at`,`modified_by`,`modified_at`,`deleted_by`,`deleted_at`,`query_key`,`search_type`,`is_enabled`,`query`) VALUES (NULL,NULL,NULL,NULL,NULL,NULL,'My_Total_students_List','E',1,'select p.id,p.firstname, p.lastname, p.risk_level, p.risk_model_id,p.intent_to_leave, rml.image_name, rml.risk_text, lc.cnt as login_cnt, p.cohert, p.last_activity from person p join risk_model_levels rml on (p.risk_model_id = rml.risk_model_id and p.risk_level = rml.risk_level) left outer join Logins_count lc on (lc.person_id = p.id) where p.id in (select distinct person_id from org_group_students ogs where ogs.org_group_id in (select org_group_id from org_group_faculty where person_id = $$personId$$ and deleted_at is null and org_permissionset_id in (select id from org_permissionset where accesslevel_ind_agg = 1 and deleted_at is null)) and ogs.deleted_at is null) and p.risk_level in (1,2,3,4) and p.deleted_at is null order by p.risk_level desc');
INSERT INTO `ebi_search` (`created_by`,`created_at`,`modified_by`,`modified_at`,`deleted_by`,`deleted_at`,`query_key`,`search_type`,`is_enabled`,`query`) VALUES (NULL,NULL,NULL,NULL,NULL,NULL,'My_Total_students_List_By_RiskLevel','E',1,'select p.id,p.firstname, p.lastname, p.risk_level, p.risk_model_id, p.intent_to_leave, rml.image_name, rml.risk_text, lc.cnt as login_cnt, p.cohert, p.last_activity from person p join risk_model_levels rml on (p.risk_model_id = rml.risk_model_id and p.risk_level = rml.risk_level) left outer join Logins_count lc on (lc.person_id = p.id) where p.id in (select distinct person_id from org_group_students ogs where ogs.org_group_id in (select org_group_id from org_group_faculty where person_id = $$personId$$ and deleted_at is  null and org_permissionset_id in (select id from org_permissionset where accesslevel_ind_agg = 1 and deleted_at is null)) and ogs.deleted_at is null) and p.deleted_at is null and p.risk_level = $$riskLevel$$ ');
INSERT INTO `ebi_search` (`created_by`,`created_at`,`modified_by`,`modified_at`,`deleted_by`,`deleted_at`,`query_key`,`search_type`,`is_enabled`,`query`) VALUES (NULL,NULL,NULL,NULL,NULL,NULL,'My_Open_Referrals_Received_List','E',1,'select r.id as \'referral_id\',r.person_id_student, p.firstname,p.lastname, p.risk_level,p.risk_model_id,p.intent_to_leave,rml.image_name,rml.risk_text,lc.cnt as login_cnt,p.cohert,p.last_activity FROM referrals r join person p on (r.person_id_student = p.id ) join risk_model_levels rml on (p.risk_model_id = rml.risk_model_id and p.risk_level = rml.risk_level) left outer join Logins_count lc on (lc.person_id = r.person_id_student) where  r.deleted_at IS NULL AND r.status = \'O\' and r.person_id_assigned_to = $$personid$$');
INSERT INTO `ebi_search` (`created_by`,`created_at`,`modified_by`,`modified_at`,`deleted_by`,`deleted_at`,`query_key`,`search_type`,`is_enabled`,`query`) VALUES (NULL,NULL,NULL,NULL,NULL,NULL,'My_Open_Referrals_Sent_List','E',1,'select r.id as \'referral_id\',r.person_id_student, p.firstname, p.lastname, p.risk_level, p.risk_model_id, p.intent_to_leave,rml.image_name, rml.risk_text,lc.cnt as login_cnt, p.cohert, p.last_activity  FROM referrals r  join person p on (r.person_id_student = p.id ) join risk_model_levels rml on (p.risk_model_id = rml.risk_model_id and p.risk_level = rml.risk_level) left outer join Logins_count lc on (lc.person_id = r.person_id_student)   where  r.deleted_at IS NULL AND r.status = \'O\' and r.person_id_faculty = $$personid$$');
INSERT INTO `ebi_search` (`created_by`,`created_at`,`modified_by`,`modified_at`,`deleted_by`,`deleted_at`,`query_key`,`search_type`,`is_enabled`,`query`) VALUES (NULL,NULL,NULL,NULL,NULL,NULL,'Student_Profile_Datablock_Info','E',1,'select dml.datablock_desc as blockdesc,mml.meta_name,pm.metadata_value as myanswer from datablock_master dm join datablock_master_lang dml ON dm.id = dml.datablock_id JOIN  datablock_metadata dmd ON dmd.datablock_id = dm.id JOIN metadata_master mm ON dmd.ebi_metadata_id = mm.id JOIN metadata_master_lang mml ON mml.metadata_id = mm.id JOIN person_metadata pm ON pm.metadata_id = mm.id  where mml.lang_id=1 AND dm.block_type=\"profile\" AND pm.person_id = $$studentid$$ AND mm.deleted_at IS NULL AND dm.deleted_at IS NULL');
INSERT INTO `ebi_search` (`created_by`,`created_at`,`modified_by`,`modified_at`,`deleted_by`,`deleted_at`,`query_key`,`search_type`,`is_enabled`,`query`) VALUES (NULL,NULL,NULL,NULL,NULL,NULL,'Student_Profile_ISP_Info','E',1,'select mml.meta_name,pm.metadata_value as myanswer from  metadata_master mm JOIN metadata_master_lang mml ON mml.metadata_id = mm.id JOIN person_metadata pm ON pm.metadata_id = mm.id  where mml.lang_id=1 AND mm.definition_type=\"O\" AND pm.person_id = $$studentid$$ AND mm.deleted_at IS NULL');


/*
-- ebi_search_lang table insert
*/

INSERT INTO `ebi_search_lang` (`ebi_search_id`,`language_id`,`created_by`,`created_at`,`modified_by`,`modified_at`,`deleted_by`,`deleted_at`,`description`) VALUES (1,1,NULL,NULL,NULL,NULL,NULL,NULL,'Get my teams recent activities');
INSERT INTO `ebi_search_lang` (`ebi_search_id`,`language_id`,`created_by`,`created_at`,`modified_by`,`modified_at`,`deleted_by`,`deleted_at`,`description`) VALUES (2,1,NULL,NULL,NULL,NULL,NULL,NULL,'Get my teams recent open referrals activities');
INSERT INTO `ebi_search_lang` (`ebi_search_id`,`language_id`,`created_by`,`created_at`,`modified_by`,`modified_at`,`deleted_by`,`deleted_at`,`description`) VALUES (3,1,NULL,NULL,NULL,NULL,NULL,NULL,'Get my teams recent login activities');
INSERT INTO `ebi_search_lang` (`ebi_search_id`,`language_id`,`created_by`,`created_at`,`modified_by`,`modified_at`,`deleted_by`,`deleted_at`,`description`) VALUES (4,1,NULL,NULL,NULL,NULL,NULL,NULL,'Get my team all activities in detail');
INSERT INTO `ebi_search_lang` (`ebi_search_id`,`language_id`,`created_by`,`created_at`,`modified_by`,`modified_at`,`deleted_by`,`deleted_at`,`description`) VALUES (5,1,NULL,NULL,NULL,NULL,NULL,NULL,'Get my team interactions in detail');
INSERT INTO `ebi_search_lang` (`ebi_search_id`,`language_id`,`created_by`,`created_at`,`modified_by`,`modified_at`,`deleted_by`,`deleted_at`,`description`) VALUES (6,1,NULL,NULL,NULL,NULL,NULL,NULL,'Get my team login in detail');
INSERT INTO `ebi_search_lang` (`ebi_search_id`,`language_id`,`created_by`,`created_at`,`modified_by`,`modified_at`,`deleted_by`,`deleted_at`,`description`) VALUES (7,1,NULL,NULL,NULL,NULL,NULL,NULL,'Get my team open referrals in detail');
INSERT INTO `ebi_search_lang` (`ebi_search_id`,`language_id`,`created_by`,`created_at`,`modified_by`,`modified_at`,`deleted_by`,`deleted_at`,`description`) VALUES (14,1,NULL,NULL,NULL,NULL,NULL,NULL,'High priority students');
INSERT INTO `ebi_search_lang` (`ebi_search_id`,`language_id`,`created_by`,`created_at`,`modified_by`,`modified_at`,`deleted_by`,`deleted_at`,`description`) VALUES (15,1,NULL,NULL,NULL,NULL,NULL,NULL,'Total Students Count Groupby Risk');
INSERT INTO `ebi_search_lang` (`ebi_search_id`,`language_id`,`created_by`,`created_at`,`modified_by`,`modified_at`,`deleted_by`,`deleted_at`,`description`) VALUES (16,1,NULL,NULL,NULL,NULL,NULL,NULL,'My_High_priority_students_List');
INSERT INTO `ebi_search_lang` (`ebi_search_id`,`language_id`,`created_by`,`created_at`,`modified_by`,`modified_at`,`deleted_by`,`deleted_at`,`description`) VALUES (17,1,NULL,NULL,NULL,NULL,NULL,NULL,'My Total Students List');
INSERT INTO `ebi_search_lang` (`ebi_search_id`,`language_id`,`created_by`,`created_at`,`modified_by`,`modified_at`,`deleted_by`,`deleted_at`,`description`) VALUES (18,1,NULL,NULL,NULL,NULL,NULL,NULL,'My Total Students List By RiskLevel');
INSERT INTO `ebi_search_lang` (`ebi_search_id`,`language_id`,`created_by`,`created_at`,`modified_by`,`modified_at`,`deleted_by`,`deleted_at`,`description`) VALUES (19,1,NULL,NULL,NULL,NULL,NULL,NULL,'My Open Referrals Received List');
INSERT INTO `ebi_search_lang` (`ebi_search_id`,`language_id`,`created_by`,`created_at`,`modified_by`,`modified_at`,`deleted_by`,`deleted_at`,`description`) VALUES (20,1,NULL,NULL,NULL,NULL,NULL,NULL,'My Open Referrals Sent List');
INSERT INTO `ebi_search_lang` (`ebi_search_id`,`language_id`,`created_by`,`created_at`,`modified_by`,`modified_at`,`deleted_by`,`deleted_at`,`description`) VALUES (21,1,NULL,NULL,NULL,NULL,NULL,NULL,'To Get Student Profile Databalock');
INSERT INTO `ebi_search_lang` (`ebi_search_id`,`language_id`,`created_by`,`created_at`,`modified_by`,`modified_at`,`deleted_by`,`deleted_at`,`description`) VALUES (22,1,NULL,NULL,NULL,NULL,NULL,NULL,'To Get Student Profile ISPs');


/*
-- email_template table insert
*/
INSERT INTO `email_template` (`id`,`created_by`,`created_at`,`modified_by`,`modified_at`,`deleted_by`,`deleted_at`,`email_key`,`is_active`,`from_email_address`,`bcc_recipient_list`) VALUES (15,NULL,NULL,NULL,NULL,NULL,NULL,'Appointment_Reminder_Staff_to_Student',NULL,'no-reply@mapworks.com','SP00345364@TechMahindra.com,devadoss.poornachari@techmahindra.com,Amith.Kishore@TechMahindra.com,MK00361563@techmahindra.com,tbooth@hindbra.in');

/*
-- email_template_lang table insert
*/
INSERT INTO `email_template_lang` (`email_template_id`,`language_id`,`created_by`,`created_at`,`modified_by`,`modified_at`,`deleted_by`,`deleted_at`,`body`,`subject`) VALUES (15,1,NULL,NULL,NULL,NULL,NULL,NULL,'<html>\n    <head>\n        <style>\n			 body {\n				background: none repeat scroll 0 0;	\n			\n			}\n			table {\n				padding: 21px;\n				width: 799px;\n				font-family: Helvetica,Arial,Verdana,San-serif;\n				font-size:13px;\n				color:#333;\n			}\n   </style>\n    </head>\n    <body>\n        <table cellpadding=\"10\" cellspacing=\"0\">\n            <tbody>\n                <tr style=\"background:#fff;border-collapse:collapse;\">\n                    <td>Dear $$student_name$$:</td>\n                </tr>\n                <tr style=\"background:#fff;border-collapse:collapse;\">\n                    <td style=\"line-height: 1.6;\">This is a reminder that you have an appointment with $$staff_name$$ on $$app_datetime$$. <br/><br/> To view the appointment details, please log in to your MAP-Works dashboard and visit\n					<a style=\"color: #0033CC;\" href=\"[link to MAP-Works student dashboard view appointment module]\">$$student_dashboard$$</a>.\n					</td>\n                </tr>\n                <tr style=\"background:#fff;border-collapse:collapse;\">\n                    <td>Best regards,\n                        <br/>EBI MAP-Works\n                    </td>\n                </tr>\n                <tr style=\"background:#fff;border-collapse:collapse;\">\n                    <td><span style=\"font-size: 11px; color: #575757; line-height: 120%; text-decoration: none;\">This email confirmation is an auto-generated message. Replies to automated messages are not monitored.</span></td>\n                </tr>\n            </tbody>\n        </table>\n    </body>\n</html>\n','MAP-Works appointment reminder [Appointment_reminder_Student]');

/*
-- risk_model_master
*/
INSERT INTO `risk_model_master` (`created_by`,`modified_by`,`deleted_by`,`created_at`,`modified_at`,`deleted_at`,`risk_key`,`effective_from`,`effective_to`,`status`) VALUES (NULL,NULL,NULL,NULL,NULL,NULL,'O',NULL,NULL,'A');

/*
-- risk_model_master_lang
*/
INSERT INTO `risk_model_master_lang` (`created_by`,`modified_by`,`deleted_by`,`risk_model_id`,`lang_id`,`created_at`,`modified_at`,`deleted_at`,`risk_model_name`) VALUES (NULL,NULL,NULL,1,1,NULL,NULL,NULL,'riskModel1');
INSERT INTO `risk_model_master_lang` (`created_by`,`modified_by`,`deleted_by`,`risk_model_id`,`lang_id`,`created_at`,`modified_at`,`deleted_at`,`risk_model_name`) VALUES (NULL,NULL,NULL,1,1,NULL,NULL,NULL,'riskModel2');
INSERT INTO `risk_model_master_lang` (`created_by`,`modified_by`,`deleted_by`,`risk_model_id`,`lang_id`,`created_at`,`modified_at`,`deleted_at`,`risk_model_name`) VALUES (NULL,NULL,NULL,1,1,NULL,NULL,NULL,'riskModel3');
INSERT INTO `risk_model_master_lang` (`created_by`,`modified_by`,`deleted_by`,`risk_model_id`,`lang_id`,`created_at`,`modified_at`,`deleted_at`,`risk_model_name`) VALUES (NULL,NULL,NULL,1,1,NULL,NULL,NULL,'riskModel4');

/*
-- risk_model_levels
*/
INSERT INTO `risk_model_levels` (`created_by`,`modified_by`,`deleted_by`,`risk_model_id`,`created_at`,`modified_at`,`deleted_at`,`risk_level`,`risk_text`,`min`,`max`,`image_name`) VALUES (NULL,NULL,NULL,1,NULL,NULL,NULL,1,'red2',NULL,NULL,'#c70009');
INSERT INTO `risk_model_levels` (`created_by`,`modified_by`,`deleted_by`,`risk_model_id`,`created_at`,`modified_at`,`deleted_at`,`risk_level`,`risk_text`,`min`,`max`,`image_name`) VALUES (NULL,NULL,NULL,1,NULL,NULL,NULL,2,'red',NULL,NULL,'#f72d35');
INSERT INTO `risk_model_levels` (`created_by`,`modified_by`,`deleted_by`,`risk_model_id`,`created_at`,`modified_at`,`deleted_at`,`risk_level`,`risk_text`,`min`,`max`,`image_name`) VALUES (NULL,NULL,NULL,1,NULL,NULL,NULL,3,'yellow',NULL,NULL,'#fec82a');
INSERT INTO `risk_model_levels` (`created_by`,`modified_by`,`deleted_by`,`risk_model_id`,`created_at`,`modified_at`,`deleted_at`,`risk_level`,`risk_text`,`min`,`max`,`image_name`) VALUES (NULL,NULL,NULL,1,NULL,NULL,NULL,4,'green',NULL,NULL,'#95cd3c');
INSERT INTO `risk_model_levels` (`created_by`,`modified_by`,`deleted_by`,`risk_model_id`,`created_at`,`modified_at`,`deleted_at`,`risk_level`,`risk_text`,`min`,`max`,`image_name`) VALUES (NULL,NULL,NULL,1,NULL,NULL,NULL,5,'none',NULL,NULL,'#cccccc');


/*
-- question_category - dummy data, will be updated once survey is integrated
*/
INSERT INTO `question_category` (`created_by`,`created_at`,`modified_by`,`modified_at`,`deleted_by`,`deleted_at`) VALUES (NULL,NULL,NULL,NULL,NULL,NULL);

/*
-- question_category_lang - dummy data, will be updated once survey is integrated
*/
INSERT INTO `question_category_lang` (`question_category_id`,`lang_id`,`created_by`,`created_at`,`modified_by`,`modified_at`,`deleted_by`,`deleted_at`,`description`) VALUES (1,1,NULL,NULL,NULL,NULL,NULL,NULL,'Question Category 1');

/*
-- question_type - dummy data, will be updated once survey is integrated
*/
INSERT INTO `question_type` (`created_by`,`created_at`,`modified_by`,`modified_at`,`deleted_by`,`deleted_at`) VALUES (NULL,NULL,NULL,NULL,NULL,NULL);
INSERT INTO `question_type` (`created_by`,`created_at`,`modified_by`,`modified_at`,`deleted_by`,`deleted_at`) VALUES (NULL,NULL,NULL,NULL,NULL,NULL);
INSERT INTO `question_type` (`created_by`,`created_at`,`modified_by`,`modified_at`,`deleted_by`,`deleted_at`) VALUES (NULL,NULL,NULL,NULL,NULL,NULL);

/*
-- question_type_lang - dummy data, will be updated once survey is integrated
*/
INSERT INTO `question_type_lang` (`question_type_id`,`lang_id`,`created_by`,`created_at`,`modified_by`,`modified_at`,`deleted_by`,`deleted_at`,`description`) VALUES (1,1,NULL,NULL,NULL,NULL,NULL,NULL,'Question Type 1');
INSERT INTO `question_type_lang` (`question_type_id`,`lang_id`,`created_by`,`created_at`,`modified_by`,`modified_at`,`deleted_by`,`deleted_at`,`description`) VALUES (2,1,NULL,NULL,NULL,NULL,NULL,NULL,'Question Type 2');
INSERT INTO `question_type_lang` (`question_type_id`,`lang_id`,`created_by`,`created_at`,`modified_by`,`modified_at`,`deleted_by`,`deleted_at`,`description`) VALUES (3,1,NULL,NULL,NULL,NULL,NULL,NULL,'Question Type 3');

/*
--  ebi_question - dummy data, will be updated once survey is integrated
*/
INSERT INTO `ebi_question` (`question_type_id`,`question_category_id`,`created_by`,`created_at`,`modified_by`,`modified_at`,`deleted_by`,`deleted_at`,`question_key`) VALUES (1,1,NULL,NULL,NULL,NULL,NULL,NULL,'key 1');
INSERT INTO `ebi_question` (`question_type_id`,`question_category_id`,`created_by`,`created_at`,`modified_by`,`modified_at`,`deleted_by`,`deleted_at`,`question_key`) VALUES (1,1,NULL,NULL,NULL,NULL,NULL,NULL,'key 2');
INSERT INTO `ebi_question` (`question_type_id`,`question_category_id`,`created_by`,`created_at`,`modified_by`,`modified_at`,`deleted_by`,`deleted_at`,`question_key`) VALUES (1,1,NULL,NULL,NULL,NULL,NULL,NULL,'key 3');
INSERT INTO `ebi_question` (`question_type_id`,`question_category_id`,`created_by`,`created_at`,`modified_by`,`modified_at`,`deleted_by`,`deleted_at`,`question_key`) VALUES (1,1,NULL,NULL,NULL,NULL,NULL,NULL,'key 4');
INSERT INTO `ebi_question` (`question_type_id`,`question_category_id`,`created_by`,`created_at`,`modified_by`,`modified_at`,`deleted_by`,`deleted_at`,`question_key`) VALUES (1,1,NULL,NULL,NULL,NULL,NULL,NULL,'key 5');
INSERT INTO `ebi_question` (`question_type_id`,`question_category_id`,`created_by`,`created_at`,`modified_by`,`modified_at`,`deleted_by`,`deleted_at`,`question_key`) VALUES (1,1,NULL,NULL,NULL,NULL,NULL,NULL,'key 6');
INSERT INTO `ebi_question` (`question_type_id`,`question_category_id`,`created_by`,`created_at`,`modified_by`,`modified_at`,`deleted_by`,`deleted_at`,`question_key`) VALUES (1,1,NULL,NULL,NULL,NULL,NULL,NULL,'key 7');

/*
--  survey - dummy data, will be updated once survey is integrated
*/
INSERT INTO `survey` (`id`) VALUES (1);
INSERT INTO `survey` (`id`) VALUES (2);
INSERT INTO `survey` (`id`) VALUES (3);
INSERT INTO `survey` (`id`) VALUES (4);
INSERT INTO `survey` (`id`) VALUES (5);
INSERT INTO `survey` (`id`) VALUES (6);
INSERT INTO `survey` (`id`) VALUES (7);
INSERT INTO `survey` (`id`) VALUES (8);
INSERT INTO `survey` (`id`) VALUES (9);
INSERT INTO `survey` (`id`) VALUES (10);

/*
-- talking_points - dummy data, will be updated once talking point admin stories implemented.
*/
INSERT INTO `talking_points` (`created_by`,`modified_by`,`deleted_by`,`ebi_question_id`,`ebi_metadata_id`,`created_at`,`modified_at`,`deleted_at`,`type`,`talking_points_type`,`min_range`,`max_range`) VALUES (NULL,NULL,NULL,1,NULL,NULL,NULL,NULL,'S','W',1,4);
INSERT INTO `talking_points` (`created_by`,`modified_by`,`deleted_by`,`ebi_question_id`,`ebi_metadata_id`,`created_at`,`modified_at`,`deleted_at`,`type`,`talking_points_type`,`min_range`,`max_range`) VALUES (NULL,NULL,NULL,2,NULL,NULL,NULL,NULL,'S','W',1,4);
INSERT INTO `talking_points` (`created_by`,`modified_by`,`deleted_by`,`ebi_question_id`,`ebi_metadata_id`,`created_at`,`modified_at`,`deleted_at`,`type`,`talking_points_type`,`min_range`,`max_range`) VALUES (NULL,NULL,NULL,3,NULL,NULL,NULL,NULL,'S','W',1,4);
INSERT INTO `talking_points` (`created_by`,`modified_by`,`deleted_by`,`ebi_question_id`,`ebi_metadata_id`,`created_at`,`modified_at`,`deleted_at`,`type`,`talking_points_type`,`min_range`,`max_range`) VALUES (NULL,NULL,NULL,1,NULL,NULL,NULL,NULL,'S','S',5,8);
INSERT INTO `talking_points` (`created_by`,`modified_by`,`deleted_by`,`ebi_question_id`,`ebi_metadata_id`,`created_at`,`modified_at`,`deleted_at`,`type`,`talking_points_type`,`min_range`,`max_range`) VALUES (NULL,NULL,NULL,2,NULL,NULL,NULL,NULL,'S','S',5,8);
INSERT INTO `talking_points` (`created_by`,`modified_by`,`deleted_by`,`ebi_question_id`,`ebi_metadata_id`,`created_at`,`modified_at`,`deleted_at`,`type`,`talking_points_type`,`min_range`,`max_range`) VALUES (NULL,NULL,NULL,3,NULL,NULL,NULL,NULL,'S','S',5,8);
INSERT INTO `talking_points` (`created_by`,`modified_by`,`deleted_by`,`ebi_question_id`,`ebi_metadata_id`,`created_at`,`modified_at`,`deleted_at`,`type`,`talking_points_type`,`min_range`,`max_range`) VALUES (NULL,NULL,NULL,4,NULL,NULL,NULL,NULL,'S','W',1,4);
INSERT INTO `talking_points` (`created_by`,`modified_by`,`deleted_by`,`ebi_question_id`,`ebi_metadata_id`,`created_at`,`modified_at`,`deleted_at`,`type`,`talking_points_type`,`min_range`,`max_range`) VALUES (NULL,NULL,NULL,5,NULL,NULL,NULL,NULL,'S','W',1,4);
INSERT INTO `talking_points` (`created_by`,`modified_by`,`deleted_by`,`ebi_question_id`,`ebi_metadata_id`,`created_at`,`modified_at`,`deleted_at`,`type`,`talking_points_type`,`min_range`,`max_range`) VALUES (NULL,NULL,NULL,6,NULL,NULL,NULL,NULL,'S','S',5,8);
INSERT INTO `talking_points` (`created_by`,`modified_by`,`deleted_by`,`ebi_question_id`,`ebi_metadata_id`,`created_at`,`modified_at`,`deleted_at`,`type`,`talking_points_type`,`min_range`,`max_range`) VALUES (NULL,NULL,NULL,7,NULL,NULL,NULL,NULL,'S','S',5,8);

/*
--  talking_points_lang - dummy data, will be updated once talking point admin stories implemented.
*/
INSERT INTO `talking_points_lang` (`created_by`,`modified_by`,`deleted_by`,`talking_points_id`,`language_master_id`,`created_at`,`modified_at`,`deleted_at`,`title`,`description`) VALUES (NULL,NULL,NULL,1,1,NULL,NULL,NULL,'Spring Transition: Commitment to Institution','Not committed to return next term. Strong predictor of attrition. Discuss future plans to determine academic goals.');
INSERT INTO `talking_points_lang` (`created_by`,`modified_by`,`deleted_by`,`talking_points_id`,`language_master_id`,`created_at`,`modified_at`,`deleted_at`,`title`,`description`) VALUES (NULL,NULL,NULL,2,1,NULL,NULL,NULL,'Spring Transition: Communications Skills','Reports poor communication skills. Refer to learning resources.');
INSERT INTO `talking_points_lang` (`created_by`,`modified_by`,`deleted_by`,`talking_points_id`,`language_master_id`,`created_at`,`modified_at`,`deleted_at`,`title`,`description`) VALUES (NULL,NULL,NULL,3,1,NULL,NULL,NULL,'Spring Transition: Class Attendance','Lorem ipsm dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.');
INSERT INTO `talking_points_lang` (`created_by`,`modified_by`,`deleted_by`,`talking_points_id`,`language_master_id`,`created_at`,`modified_at`,`deleted_at`,`title`,`description`) VALUES (NULL,NULL,NULL,4,1,NULL,NULL,NULL,'Fall Check-Up: Basic Academic Behaviors','Reports good basic academic behaviours(i.e., talking good notes and turning in requited homework). Strong predictor of academic performance. Student typically overestimate these skills; may still need some improvement. Ask about grades on assignments/tests.');
INSERT INTO `talking_points_lang` (`created_by`,`modified_by`,`deleted_by`,`talking_points_id`,`language_master_id`,`created_at`,`modified_at`,`deleted_at`,`title`,`description`) VALUES (NULL,NULL,NULL,5,1,NULL,NULL,NULL,'Fall Mid-Terms - Fall Mid-Term Grades - Green','Little to no risk for poor academic performance(not deficient in any course).');
INSERT INTO `talking_points_lang` (`created_by`,`modified_by`,`deleted_by`,`talking_points_id`,`language_master_id`,`created_at`,`modified_at`,`deleted_at`,`title`,`description`) VALUES (NULL,NULL,NULL,6,1,NULL,NULL,NULL,'Fall Check-Up: Basic Academic Behaviours','Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna');
INSERT INTO `talking_points_lang` (`created_by`,`modified_by`,`deleted_by`,`talking_points_id`,`language_master_id`,`created_at`,`modified_at`,`deleted_at`,`title`,`description`) VALUES (NULL,NULL,NULL,7,1,NULL,NULL,NULL,'Spring Transition: Other Academic concerns','Sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.Ut enim ad minim veniam, quis nostrud exercitation');
INSERT INTO `talking_points_lang` (`created_by`,`modified_by`,`deleted_by`,`talking_points_id`,`language_master_id`,`created_at`,`modified_at`,`deleted_at`,`title`,`description`) VALUES (NULL,NULL,NULL,8,1,NULL,NULL,NULL,'Spring Transition: Academic Skills','Strong predictor of attrition. Discuss future plans to determine academic skills');
INSERT INTO `talking_points_lang` (`created_by`,`modified_by`,`deleted_by`,`talking_points_id`,`language_master_id`,`created_at`,`modified_at`,`deleted_at`,`title`,`description`) VALUES (NULL,NULL,NULL,9,1,NULL,NULL,NULL,'Fall Check-Up: Academic Skills','Good academic performance through skills exploration.  may still need some improvement');
INSERT INTO `talking_points_lang` (`created_by`,`modified_by`,`deleted_by`,`talking_points_id`,`language_master_id`,`created_at`,`modified_at`,`deleted_at`,`title`,`description`) VALUES (NULL,NULL,NULL,10,1,NULL,NULL,NULL,'Fall Mid-Terms - Academic Performance','No risk for poor academic performance(not deficient in any course).');


/*
--  org_talking_points- dummy data, will be updated once talking point admin stories implemented.
*/
INSERT INTO `org_talking_points` (`created_by`,`modified_by`,`deleted_by`,`organization_id`,`person_id`,`talking_points_id`,`survey_id`,`created_at`,`modified_at`,`deleted_at`,`response`) VALUES (NULL,NULL,NULL,1,2,1,1,'2014-12-24 14:30:00',NULL,NULL,'3');
INSERT INTO `org_talking_points` (`created_by`,`modified_by`,`deleted_by`,`organization_id`,`person_id`,`talking_points_id`,`survey_id`,`created_at`,`modified_at`,`deleted_at`,`response`) VALUES (NULL,NULL,NULL,1,2,2,2,'2014-12-24 14:40:00',NULL,NULL,'2');
INSERT INTO `org_talking_points` (`created_by`,`modified_by`,`deleted_by`,`organization_id`,`person_id`,`talking_points_id`,`survey_id`,`created_at`,`modified_at`,`deleted_at`,`response`) VALUES (NULL,NULL,NULL,1,2,3,3,'2014-12-24 16:40:00',NULL,NULL,'3');
INSERT INTO `org_talking_points` (`created_by`,`modified_by`,`deleted_by`,`organization_id`,`person_id`,`talking_points_id`,`survey_id`,`created_at`,`modified_at`,`deleted_at`,`response`) VALUES (NULL,NULL,NULL,1,2,4,4,'2014-12-27 14:40:00',NULL,NULL,'7');
INSERT INTO `org_talking_points` (`created_by`,`modified_by`,`deleted_by`,`organization_id`,`person_id`,`talking_points_id`,`survey_id`,`created_at`,`modified_at`,`deleted_at`,`response`) VALUES (NULL,NULL,NULL,1,2,5,5,'2014-12-30 14:40:00',NULL,NULL,'6');
INSERT INTO `org_talking_points` (`created_by`,`modified_by`,`deleted_by`,`organization_id`,`person_id`,`talking_points_id`,`survey_id`,`created_at`,`modified_at`,`deleted_at`,`response`) VALUES (NULL,NULL,NULL,1,2,6,6,'2014-12-31 11:40:00',NULL,NULL,'6');
INSERT INTO `org_talking_points` (`created_by`,`modified_by`,`deleted_by`,`organization_id`,`person_id`,`talking_points_id`,`survey_id`,`created_at`,`modified_at`,`deleted_at`,`response`) VALUES (NULL,NULL,NULL,1,2,7,7,'2015-01-01 10:20:00',NULL,NULL,'4');
INSERT INTO `org_talking_points` (`created_by`,`modified_by`,`deleted_by`,`organization_id`,`person_id`,`talking_points_id`,`survey_id`,`created_at`,`modified_at`,`deleted_at`,`response`) VALUES (NULL,NULL,NULL,1,2,8,8,'2015-01-01 09:20:00',NULL,NULL,'3');
INSERT INTO `org_talking_points` (`created_by`,`modified_by`,`deleted_by`,`organization_id`,`person_id`,`talking_points_id`,`survey_id`,`created_at`,`modified_at`,`deleted_at`,`response`) VALUES (NULL,NULL,NULL,1,2,9,9,'2015-01-02 09:20:00',NULL,NULL,'6');
INSERT INTO `org_talking_points` (`created_by`,`modified_by`,`deleted_by`,`organization_id`,`person_id`,`talking_points_id`,`survey_id`,`created_at`,`modified_at`,`deleted_at`,`response`) VALUES (NULL,NULL,NULL,1,2,10,10,'2015-01-02 09:10:00',NULL,NULL,'7');


/*
-- org_question, will be updated once org_question master data screens are developed
*/
INSERT INTO `org_question` (`organization_id`,`question_type_id`,`question_category_id`,`created_by`,`created_at`,`modified_by`,`modified_at`,`deleted_by`,`deleted_at`,`question_key`,`question_text`) VALUES (1,1,1,NULL,NULL,NULL,NULL,NULL,NULL,'q1','What is your name ?');
INSERT INTO `org_question` (`organization_id`,`question_type_id`,`question_category_id`,`created_by`,`created_at`,`modified_by`,`modified_at`,`deleted_by`,`deleted_at`,`question_key`,`question_text`) VALUES (1,1,1,NULL,NULL,NULL,NULL,NULL,NULL,'q1','What is your favorite color ?');

/*
-- ebi_search table update for My_Team_List_with_only_OpenReferrals
*/
UPDATE `synapse`.`ebi_search` SET `query`='select \'openreferrals\' as activity,al.activity_date as activity_date,al.person_id_faculty as team_member_id,pa.firstname as team_member_firstname,pa.lastname as team_member_lastname, pa.username as primary_email,al.person_id_student as student_id, (CASE WHEN gs.person_id IS NOT NULL and gs.deleted_at IS NULL then p.firstname ELSE \'\' END) as student_firstname,(CASE WHEN gs.person_id IS NOT NULL and gs.deleted_at IS NULL then p.lastname ELSE \'\' END) as student_lastname,\'O\' as activity_type, al.referrals_id, al.appointments_id, al.note_id, al.contacts_id, \'\' as reason_id, al.reason as reason_text,r.status,gs.person_id from activity_log al left join referrals r on r.id = al.referrals_id left outer join org_group_students gs on (al.person_id_student = gs.person_id and gs.org_group_id in (select distinct org_group_id from org_group_faculty where person_id in ($$personId$$) and deleted_at IS NULL )) left join person pa on pa.id = al.person_id_faculty left join person p on p.id = al.person_id_student where al.activity_type in (\'R\') and r.status = \'O\' and al.activity_date between \'$$fromDate$$\' and \'$$toDate$$\' and al.person_id_faculty in ($$teamMemberId$$) and al.deleted_at IS NULL and al.organization_id = \'$$organizationId$$\' order by activity_date' WHERE `query_key`='My_Team_List_with_only_OpenReferrals';

/*
-- ebi_search table update for My_Team_List_without_Referrals
*/
UPDATE `synapse`.`ebi_search` SET `query`='select \'interactions\' as activity,al.activity_date as activity_date,al.person_id_faculty as team_member_id,pa.firstname as team_member_firstname,pa.lastname as team_member_lastname, pa.username as primary_email,al.person_id_student as student_id, (CASE WHEN gs.person_id IS NOT NULL and gs.deleted_at IS NULL then p.firstname ELSE \'\' END) as student_firstname,(CASE WHEN gs.person_id IS NOT NULL and gs.deleted_at IS NULL then p.lastname ELSE \'\' END) as student_lastname,al.activity_type as activity_type, al.referrals_id, al.appointments_id, al.note_id, al.contacts_id, \'\' as reason_id, al.reason as reason_text,r.status,gs.person_id from activity_log al left join referrals r on r.id = al.referrals_id left outer join org_group_students gs on (al.person_id_student = gs.person_id and gs.org_group_id in (select distinct org_group_id from org_group_faculty where person_id in ($$personId$$) and deleted_at IS NULL )) left join person pa on pa.id = al.person_id_faculty left join person p on p.id = al.person_id_student where al.activity_type in (\'A\',\'C\',\'N\',\'R\') and al.activity_date between \'$$fromDate$$\' and \'$$toDate$$\' and al.person_id_faculty in ($$teamMemberId$$) and al.deleted_at IS NULL and al.organization_id = \'$$organizationId$$\' order by activity_date' WHERE `query_key`='My_Team_List_without_Referrals';

/*
-- ebi_search table update for My_Team_List_with_OpenReferrals_and_otherActivities
*/
UPDATE `synapse`.`ebi_search` SET `query`='(select \'openreferrals\' as activity,al.activity_date as activity_date,al.person_id_faculty as team_member_id,pa.firstname as team_member_firstname,pa.lastname as team_member_lastname, pa.username as primary_email,al.person_id_student as student_id,(CASE WHEN gs.person_id IS NOT NULL and gs.deleted_at IS NULL then p.firstname ELSE \'\' END) as student_firstname,(CASE WHEN gs.person_id IS NOT NULL and gs.deleted_at IS NULL then p.lastname ELSE \'\' END) as student_lastname,\'O\' as activity_type, al.referrals_id, al.appointments_id, al.note_id, al.contacts_id, \'\' as reason_id, al.reason as reason_text,r.status,gs.person_id from activity_log al left join referrals r on r.id = al.referrals_id left outer join org_group_students gs on (al.person_id_student = gs.person_id and gs.org_group_id in (select distinct org_group_id from org_group_faculty where person_id in ($$personId$$) and deleted_at IS NULL )) left join person pa on pa.id = al.person_id_faculty left join person p on p.id = al.person_id_student where al.activity_type in (\'R\') and al.activity_date between \'$$fromDate$$\' and \'$$toDate$$\' and al.person_id_faculty in ($$teamMemberId$$) and al.deleted_at IS NULL and al.organization_id = \'$$organizationId$$\') union (select \'interactions\' as activity,al.activity_date as activity_date,al.person_id_faculty as team_member_id, pa.firstname as team_member_firstname,pa.lastname as team_member_lastname, pa.username as primary_email,al.person_id_student as student_id,(CASE WHEN gs.person_id IS NOT NULL and gs.deleted_at IS NULL then p.firstname ELSE \'\' END) as student_firstname,(CASE WHEN gs.person_id IS NOT NULL and gs.deleted_at IS NULL then p.lastname ELSE \'\' END) as student_lastname, al.activity_type as activity_type, al.referrals_id, al.appointments_id, al.note_id, al.contacts_id, \'\' as reason_id, al.reason as reason_text,\'\' as status,gs.person_id from activity_log al left outer join org_group_students gs on (al.person_id_student = gs.person_id and gs.org_group_id in (select distinct org_group_id from org_group_faculty where person_id in ($$personId$$) and deleted_at IS NULL )) left join person pa on pa.id = al.person_id_faculty left join person p on p.id = al.person_id_student where al.activity_type in (\'A\',\'C\',\'N\',\'L\') and al.activity_date between \'$$fromDate$$\' and \'$$toDate$$\' and al.person_id_faculty in ($$teamMemberId$$) and al.deleted_at IS NULL and al.organization_id = \'$$organizationId$$\') order by activity_date' WHERE `query_key`='My_Team_List_with_OpenReferrals_and_otherActivities';



/*
-- ESPRJ-1204 issue fix
*/

UPDATE `synapse`.`ebi_search` SET `query`='select r.id as \'referral_id\',r.person_id_student, p.firstname, p.lastname, p.risk_level, p.risk_model_id, p.intent_to_leave,rml.image_name, rml.risk_text,lc.cnt as login_cnt, p.cohert, p.last_activity  FROM referrals r  join person p on (r.person_id_student = p.id ) LEFT join risk_model_levels rml on (p.risk_model_id = rml.risk_model_id and p.risk_level = rml.risk_level) left outer join Logins_count lc on (lc.person_id = r.person_id_student)   where  r.deleted_at IS NULL AND (r.status = \'O\' or r.status=\'R\') and r.person_id_faculty = $$personid$$' WHERE `query_key`='My_Open_Referrals_Sent_List';

UPDATE `synapse`.`ebi_search` SET `query`='select r.id as \'referral_id\',r.person_id_student, p.firstname,p.lastname, p.risk_level,p.risk_model_id,p.intent_to_leave,rml.image_name,rml.risk_text,lc.cnt as login_cnt,p.cohert,p.last_activity FROM referrals r join person p on (r.person_id_student = p.id ) left join risk_model_levels rml on (p.risk_model_id = rml.risk_model_id and p.risk_level = rml.risk_level) left outer join Logins_count lc on (lc.person_id = r.person_id_student) where  r.deleted_at IS NULL AND r.status = \'O\' and r.person_id_assigned_to = $$personid$$' WHERE `query_key`='My_Open_Referrals_Received_List';

/*
* -- ESPRJ-600 defect fix
*/

UPDATE `synapse`.`email_template_lang` SET `body`='<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\">\n\n<html xmlns=\"http://www.w3.org/1999/xhtml\">\n<head>\n    <title>Email</title>\n</head>\n<body>\n<center>\n    <table align=\"center\">\n        <tr>\n            <th style=\"padding:0px;margin:0px;\">\n               \n               <table  style=\"font-family:helvetica,arial,verdana,san-serif;font-weight:normal;width:800px; height=337px;text-align:center;padding:0px;\">\n               <tr bgcolor=\"#eeeeee\" style=\"width:800px;padding:0px;height:337px;\">\n               <td style=\"width:800px;padding:0px;height:337px;\">\n               <table style=\"text-align:center;width:100%\">\n               <tr>\n                    <td style=\"padding:0px;\">\n                    <table style=\"margin-top:56px;width:100%\">\n		<tr>\n		<td style=\"text-align:center;padding:0px;font-size:33px;height:80px;width:800px;font-family:helvetica,arial,verdana,san-serif;font-weight:normal;color:#000000\">\n					<br>Welcome to MAP-Works.		\n		</td>\n		</tr>\n		</table>\n                    </td>\n               </tr>\n               <tr style=\"margin:0px;padding:0px;\">\n		<td style=\"text-align:center;font-family:helvetica,arial,verdana,san-serif;font-weight:normal;color:#333333;font-size: 16px;height:16px;padding-top:8px;\">\n        			Use the link below to create your password and start using MAP-Works.\n		\n		</td></tr>\n           <tr style=\"margin:0px;padding:0px;\"><td style=\"margin:0px;padding:0px;\">\n        \n<table align=\"center\"> \n  <tr style=\"margin:0px;padding:0px;\">\n    <th style=\"margin:0px;padding:0px;\">\n           <table cellpadding=\"36\" style=\"width:100%\">\n        <tr>\n		<td align=\"center\" style=\"text-align:center;color:#000000;font-weight:normal;font-size: 20px;\">		\n		          <table style=\"border-radius:2px;width:175px;font-size:20px;font-family:helvetica,arial,verdana,san-serif;font-weight:normal;text-align:center;display: block;margin: 0 auto;padding:0px 0px\">\n		<tr>\n        <td style=\"background-color:#4673a7; height:58px;border-radius:2px;line-height:21px;text-decoration:none ;vertical-align:middle;\">        \n        <a href=\"$$activation_token$$\" style=\"outline-offset:19px !important;background-color: #4673a7; color: #ffffff;display: block;text-decoration: none;width:175px \"target=\"_blank\"><span style=\"text-decoration: none !important;\">Sign In Now</span></a>\n        </td></tr>\n        <tr valign=\"top\" style=\"height:33px;\">\n        <td style=\"margin-left:auto; margin-right:auto;width:100%;font-size: 14px;height:14px;padding-bottom:7px;font-family:helvetica,arial,verdana,san-serif;font-weight:medium;color:#333333;link:#1e73d5;padding-top:8px;\">       \n				<span>Use this link to <a target=\"_blank\" style=\"link:#1e73d5;\" href=\"$$activation_token$$\">sign in.</a></span>  \n			\n        </td></tr>\n        \n        </table>\n		</td></tr>\n        \n        </table>\n        </th>\n    \n  </tr>\n \n</table>\n       </td></tr>\n</table>\n               </td>\n               </tr>\n               <tr valign=\"top\">\n<td >\n<table>\n<tr>\n<td valign=\"top\" align=\"center\">\n<div style=\"text-align:left;margin-left:30px;font-family:helvetica,arial,verdana,san-serif;font-weight:normal;\n			margin-right:18px;font-size: 13px;color: #333333;margin-top:30px;link:#1e73d5;font-weight:normal;\" >\n				Thank you for participating in the spring 2015 pilot. We look forward to hearing your feedback as\n				it will inform future releases of our new student retention and success solution.\n				\n				<br><br>\n				If you have any questions, please contact us here.<br>\n				<a href=\"mailto:$$Support_Helpdesk_Email_Address$$\" style=\"link:#1e73d5;\">$$Support_Helpdesk_Email_Address$$</a> \n				<br><br>\n				Sincerely,\n				<div style=\"text-align:left;font-weight:bold;font-size: 14px;color:#333333\" >\n					<b>The EBI MAP-Works Client Services Team</b> \n					\n				</div>\n                </div>\n</td>\n</tr>\n</table>\n</td>\n</tr>\n               </table>\n               \n            </th>\n            \n        </tr>\n        \n    </table>\n    </center>\n</body>\n</html>\n' WHERE `id`='4';

/*
* - Fix for staff - student permission on details page
*/

UPDATE `synapse`.`ebi_search` SET `query`='select dml.datablock_desc as blockdesc,mml.meta_name,pm.metadata_value as myanswer from datablock_master dm join datablock_master_lang dml ON dm.id = dml.datablock_id JOIN  datablock_metadata dmd ON dmd.datablock_id = dm.id JOIN metadata_master mm ON dmd.ebi_metadata_id = mm.id JOIN metadata_master_lang mml ON mml.metadata_id = mm.id JOIN person_metadata pm ON pm.metadata_id = mm.id  where mml.lang_id=$$lang$$ AND dm.block_type=\"profile\" AND pm.person_id = $$studentid$$ AND dm.id IN($$datablockpermission$$) AND mm.deleted_at IS NULL AND dm.deleted_at IS NULL' WHERE `id`='21';


/*
* Team activities query fix - ESPRJ-1228 & 1229
*/
#My_Team_Interactions_count_Groupby_Teams

UPDATE `synapse`.`ebi_search` SET `query`='select tm.teams_id, t.team_name, count(al.id) as numbers, \'interaction\' as activity from Teams t, team_members tm, activity_log al where tm.teams_id = t.id and tm.organization_id = t.organization_id and al.organization_id = tm.organization_id and al.person_id_faculty = tm.person_id and al.activity_type in (\'R\',\'C\',\'N\',\'A\') and al.activity_date between \'$$fromDate$$\' and \'$$toDate$$\' and tm.teams_id in (SELECT teams_id FROM team_members where is_team_leader = 1 and person_id = \'$$loggedUserId$$\'  and deleted_at IS NULL) and tm.organization_id = \'$$organizationId$$\' and t.deleted_at IS NULL and tm.deleted_at IS NULL and al.deleted_at IS NULL group by t.team_name' WHERE `query_key`='My_Team_Interactions_count_Groupby_Teams';


#My_Team_Open_Referrals_count_Groupby_Teams
UPDATE `synapse`.`ebi_search` SET `query`='select tm.teams_id, t.team_name, count(al.id) as numbers, \'openreferrals\' as activity from Teams t, team_members tm, activity_log al, referrals r where tm.teams_id = t.id and tm.organization_id = t.organization_id and al.organization_id = tm.organization_id and al.person_id_faculty = tm.person_id and al.activity_type = \'R\' and r.id = al.referrals_id and r.status = \'O\' and al.activity_date between \'$$fromDate$$\' and \'$$toDate$$\' and tm.teams_id in (SELECT teams_id FROM team_members where is_team_leader = 1 and person_id = \'$$loggedUserId$$\' and deleted_at IS NULL) and tm.organization_id = \'$$organizationId$$\' and t.deleted_at IS NULL and tm.deleted_at IS NULL and al.deleted_at IS NULL group by t.team_name' WHERE `query_key`='My_Team_Open_Referrals_count_Groupby_Teams';

#My_Team_Logins_Count_Groupby_Teams
UPDATE `synapse`.`ebi_search` SET `query`='select tm.teams_id, t.team_name, count(al.id) as numbers, \'logins\' as activity from Teams t, team_members tm, activity_log al where tm.teams_id = t.id and tm.organization_id = t.organization_id and al.organization_id = tm.organization_id and al.person_id_faculty = tm.person_id and al.activity_type = \'L\' and al.activity_date between \'$$fromDate$$\' and \'$$toDate$$\' and tm.teams_id in (SELECT teams_id FROM team_members where is_team_leader = 1 and person_id = \'$$loggedUserId$$\' and deleted_at IS NULL) and tm.organization_id = \'$$organizationId$$\' and t.deleted_at IS NULL and tm.deleted_at IS NULL and al.deleted_at IS NULL group by t.team_name' WHERE `query_key`='My_Team_Logins_Count_Groupby_Teams';


/*
* Fix for ESPRJ-1365
*/
UPDATE `synapse`.`risk_model_levels` SET `risk_text`='No risk' WHERE `id`='5';

